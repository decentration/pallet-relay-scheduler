{"message":"unused import: `codec::FullCodec`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/lib.rs","byte_start":6687,"byte_end":6703,"line_start":185,"line_end":185,"column_start":6,"column_end":22,"is_primary":true,"text":[{"text":"\tuse codec::FullCodec;","highlight_start":6,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":6683,"byte_end":6704,"line_start":185,"line_end":185,"column_start":2,"column_end":23,"is_primary":true,"text":[{"text":"\tuse codec::FullCodec;","highlight_start":2,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `codec::FullCodec`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:185:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    use codec::FullCodec;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"method `on_initialize` has an incompatible type for trait","code":{"code":"E0053","explanation":"The parameters of any trait method must match between a trait implementation\nand the trait definition.\n\nErroneous code example:\n\n```compile_fail,E0053\ntrait Foo {\n    fn foo(x: u16);\n    fn bar(&self);\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    // error, expected u16, found i16\n    fn foo(x: i16) { }\n\n    // error, types differ in mutability\n    fn bar(&mut self) { }\n}\n```\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":11241,"byte_end":11293,"line_start":308,"line_end":308,"column_start":3,"column_end":55,"is_primary":true,"text":[{"text":"\t\tfn on_initialize(now: T::RelayBlockNumber) -> Weight {","highlight_start":3,"highlight_end":55}],"label":"expected frame_system::Config::BlockNumber, found pallet::Config::RelayBlockNumber","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected fn pointer `fn(<T as frame_system::Config>::BlockNumber) -> _`\n   found fn pointer `fn(<T as pallet::Config>::RelayBlockNumber) -> _`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0053]\u001b[0m\u001b[0m\u001b[1m: method `on_initialize` has an incompatible type for trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:308:3\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m308\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        fn on_initialize(now: T::RelayBlockNumber) -> Weight {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected frame_system::Config::BlockNumber, found pallet::Config::RelayBlockNumber\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected fn pointer `fn(\u001b[0m\u001b[0m\u001b[1m<T as frame_system::Config>::BlockNumber\u001b[0m\u001b[0m) -> _`\u001b[0m\n\u001b[0m               found fn pointer `fn(\u001b[0m\u001b[0m\u001b[1m<T as pallet::Config>::RelayBlockNumber\u001b[0m\u001b[0m) -> _`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":20332,"byte_end":20790,"line_start":587,"line_end":601,"column_start":6,"column_end":27,"is_primary":true,"text":[{"text":"\t\t\t\t\tagenda","highlight_start":6,"highlight_end":12},{"text":"\t\t\t\t\t\t.into_iter()","highlight_start":1,"highlight_end":19},{"text":"\t\t\t\t\t\t.map(|schedule| {","highlight_start":1,"highlight_end":24},{"text":"\t\t\t\t\t\t\tweight.saturating_accrue(T::DbWeight::get().reads_writes(1, 1));","highlight_start":1,"highlight_end":72},{"text":"","highlight_start":1,"highlight_end":1},{"text":"\t\t\t\t\t\t\tschedule.map(|schedule| ScheduledV3 {","highlight_start":1,"highlight_end":45},{"text":"\t\t\t\t\t\t\t\tmaybe_id: schedule.maybe_id,","highlight_start":1,"highlight_end":37},{"text":"\t\t\t\t\t\t\t\tpriority: schedule.priority,","highlight_start":1,"highlight_end":37},{"text":"\t\t\t\t\t\t\t\tcall: schedule.call.into(),","highlight_start":1,"highlight_end":36},{"text":"\t\t\t\t\t\t\t\tmaybe_periodic: schedule.maybe_periodic,","highlight_start":1,"highlight_end":49},{"text":"\t\t\t\t\t\t\t\torigin: system::RawOrigin::Root.into(),","highlight_start":1,"highlight_end":48},{"text":"\t\t\t\t\t\t\t\t_phantom: Default::default(),","highlight_start":1,"highlight_end":38},{"text":"\t\t\t\t\t\t\t})","highlight_start":1,"highlight_end":10},{"text":"\t\t\t\t\t\t})","highlight_start":1,"highlight_end":9},{"text":"\t\t\t\t\t\t.collect::<Vec<_>>(),","highlight_start":1,"highlight_end":27}],"label":"expected frame_system::Config::BlockNumber, found pallet::Config::RelayBlockNumber","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `std::vec::Vec<std::option::Option<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>>`\n   found struct `std::vec::Vec<std::option::Option<ScheduledV3<_, <T as pallet::Config>::RelayBlockNumber, _, _>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:587:6\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m587\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    agenda\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m588\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        .into_iter()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m589\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        .map(|schedule| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m590\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                            weight.saturating_accrue(T::DbWeight::get().reads_writes(1, 1));\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m600\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m601\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        .collect::<Vec<_>>(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|____________________________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected frame_system::Config::BlockNumber, found pallet::Config::RelayBlockNumber\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `std::vec::Vec<std::option::Option<ScheduledV3<\u001b[0m\u001b[0m\u001b[1mMaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m<T as frame_system::Config>::BlockNumber\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m<T as pallet::Config>::PalletsOrigin\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m<T as frame_system::Config>::AccountId\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m               found struct `std::vec::Vec<std::option::Option<ScheduledV3<\u001b[0m\u001b[0m\u001b[1m_\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m<T as pallet::Config>::RelayBlockNumber\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m_\u001b[0m\u001b[0m, \u001b[0m\u001b[0m\u001b[1m_\u001b[0m\u001b[0m>>>`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":22691,"byte_end":23047,"line_start":676,"line_end":688,"column_start":5,"column_end":26,"is_primary":true,"text":[{"text":"\t\t\t\tagenda","highlight_start":5,"highlight_end":11},{"text":"\t\t\t\t\t.into_iter()","highlight_start":1,"highlight_end":18},{"text":"\t\t\t\t\t.map(|schedule| {","highlight_start":1,"highlight_end":23},{"text":"\t\t\t\t\t\tschedule.map(|schedule| Scheduled {","highlight_start":1,"highlight_end":42},{"text":"\t\t\t\t\t\t\tmaybe_id: schedule.maybe_id,","highlight_start":1,"highlight_end":36},{"text":"\t\t\t\t\t\t\tpriority: schedule.priority,","highlight_start":1,"highlight_end":36},{"text":"\t\t\t\t\t\t\tcall: schedule.call,","highlight_start":1,"highlight_end":28},{"text":"\t\t\t\t\t\t\tmaybe_periodic: schedule.maybe_periodic,","highlight_start":1,"highlight_end":48},{"text":"\t\t\t\t\t\t\torigin: schedule.origin.into(),","highlight_start":1,"highlight_end":39},{"text":"\t\t\t\t\t\t\t_phantom: Default::default(),","highlight_start":1,"highlight_end":37},{"text":"\t\t\t\t\t\t})","highlight_start":1,"highlight_end":9},{"text":"\t\t\t\t\t})","highlight_start":1,"highlight_end":8},{"text":"\t\t\t\t\t.collect::<Vec<_>>(),","highlight_start":1,"highlight_end":26}],"label":"expected frame_system::Config::BlockNumber, found pallet::Config::RelayBlockNumber","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `std::vec::Vec<std::option::Option<ScheduledV3<_, <T as frame_system::Config>::BlockNumber, _, <T as frame_system::Config>::AccountId>>>`\n   found struct `std::vec::Vec<std::option::Option<ScheduledV3<_, <T as pallet::Config>::RelayBlockNumber, _, _>>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:676:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m676\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m                agenda\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m677\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    .into_iter()\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m678\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    .map(|schedule| {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m679\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                        schedule.map(|schedule| Scheduled {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m687\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    })\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m688\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    .collect::<Vec<_>>(),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|________________________________________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected frame_system::Config::BlockNumber, found pallet::Config::RelayBlockNumber\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected struct `std::vec::Vec<std::option::Option<ScheduledV3<_, \u001b[0m\u001b[0m\u001b[1m<T as frame_system::Config>::BlockNumber\u001b[0m\u001b[0m, _, \u001b[0m\u001b[0m\u001b[1m<T as frame_system::Config>::AccountId\u001b[0m\u001b[0m>>>`\u001b[0m\n\u001b[0m               found struct `std::vec::Vec<std::option::Option<ScheduledV3<_, \u001b[0m\u001b[0m\u001b[1m<T as pallet::Config>::RelayBlockNumber\u001b[0m\u001b[0m, _, \u001b[0m\u001b[0m\u001b[1m_\u001b[0m\u001b[0m>>>`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":23468,"byte_end":23469,"line_start":700,"line_end":700,"column_start":49,"column_end":50,"is_primary":true,"text":[{"text":"\t\t\tDispatchTime::After(x) => now.saturating_add(x).saturating_add(One::one()),","highlight_start":49,"highlight_end":50}],"label":"expected frame_system::Config::BlockNumber, found pallet::Config::RelayBlockNumber","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected associated type `<T as frame_system::Config>::BlockNumber`\n   found associated type `<T as pallet::Config>::RelayBlockNumber`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:700:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m700\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            DispatchTime::After(x) => now.saturating_add(x).saturating_add(One::one()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected frame_system::Config::BlockNumber, found pallet::Config::RelayBlockNumber\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected associated type `\u001b[0m\u001b[0m\u001b[1m<T as frame_system::Config>::BlockNumber\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found associated type `\u001b[0m\u001b[0m\u001b[1m<T as pallet::Config>::RelayBlockNumber\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"`match` arms have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":23449,"byte_end":23497,"line_start":700,"line_end":700,"column_start":30,"column_end":78,"is_primary":true,"text":[{"text":"\t\t\tDispatchTime::After(x) => now.saturating_add(x).saturating_add(One::one()),","highlight_start":30,"highlight_end":78}],"label":"expected pallet::Config::RelayBlockNumber, found frame_system::Config::BlockNumber","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":23278,"byte_end":23279,"line_start":697,"line_end":697,"column_start":27,"column_end":28,"is_primary":false,"text":[{"text":"\t\t\tDispatchTime::At(x) => x,","highlight_start":27,"highlight_end":28}],"label":"this is found to be of type `<T as pallet::Config>::RelayBlockNumber`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":23239,"byte_end":23502,"line_start":696,"line_end":701,"column_start":14,"column_end":4,"is_primary":false,"text":[{"text":"\t\tlet when = match when {","highlight_start":14,"highlight_end":26},{"text":"\t\t\tDispatchTime::At(x) => x,","highlight_start":1,"highlight_end":29},{"text":"\t\t\t// The current block has already completed it's scheduled tasks, so","highlight_start":1,"highlight_end":71},{"text":"\t\t\t// Schedule the task at lest one block after this current block.","highlight_start":1,"highlight_end":68},{"text":"\t\t\tDispatchTime::After(x) => now.saturating_add(x).saturating_add(One::one()),","highlight_start":1,"highlight_end":79},{"text":"\t\t};","highlight_start":1,"highlight_end":4}],"label":"`match` arms have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"        expected type `<T as pallet::Config>::RelayBlockNumber`\nfound associated type `<T as frame_system::Config>::BlockNumber`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: `match` arms have incompatible types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:700:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m        let when = match when {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m____________________-\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m697\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            DispatchTime::At(x) => x,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mthis is found to be of type `<T as pallet::Config>::RelayBlockNumber`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m698\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            // The current block has already completed it's scheduled tasks, so\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m699\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            // Schedule the task at lest one block after this current block.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m700\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            DispatchTime::After(x) => now.saturating_add(x).saturating_add(One::one()),\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected pallet::Config::RelayBlockNumber, found frame_system::Config::BlockNumber\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m701\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|_________-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m`match` arms have incompatible types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m:         expected type `\u001b[0m\u001b[0m\u001b[1m<T as pallet::Config>::RelayBlockNumber\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m            found associated type `\u001b[0m\u001b[0m\u001b[1m<T as frame_system::Config>::BlockNumber\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"can't compare `<T as pallet::Config>::RelayBlockNumber` with `<T as frame_system::Config>::BlockNumber`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":23515,"byte_end":23517,"line_start":703,"line_end":703,"column_start":11,"column_end":13,"is_primary":true,"text":[{"text":"\t\tif when <= now {","highlight_start":11,"highlight_end":13}],"label":"no implementation for `<T as pallet::Config>::RelayBlockNumber < <T as frame_system::Config>::BlockNumber` and `<T as pallet::Config>::RelayBlockNumber > <T as frame_system::Config>::BlockNumber`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `PartialOrd<<T as frame_system::Config>::BlockNumber>` is not implemented for `<T as pallet::Config>::RelayBlockNumber`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider further restricting the associated type","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":23167,"byte_end":23167,"line_start":693,"line_end":693,"column_start":104,"column_end":104,"is_primary":true,"text":[{"text":"\tfn resolve_time(when: DispatchTime<T::RelayBlockNumber>) -> Result<T::RelayBlockNumber, DispatchError> {","highlight_start":104,"highlight_end":104}],"label":null,"suggested_replacement":" where <T as pallet::Config>::RelayBlockNumber: PartialOrd<<T as frame_system::Config>::BlockNumber>","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: can't compare `<T as pallet::Config>::RelayBlockNumber` with `<T as frame_system::Config>::BlockNumber`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:703:11\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m703\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        if when <= now {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno implementation for `<T as pallet::Config>::RelayBlockNumber < <T as frame_system::Config>::BlockNumber` and `<T as pallet::Config>::RelayBlockNumber > <T as frame_system::Config>::BlockNumber`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the trait `PartialOrd<<T as frame_system::Config>::BlockNumber>` is not implemented for `<T as pallet::Config>::RelayBlockNumber`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider further restricting the associated type\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m693\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn resolve_time(when: DispatchTime<T::RelayBlockNumber>) -> Result<T::RelayBlockNumber, DispatchError>\u001b[0m\u001b[0m\u001b[38;5;10m where <T as pallet::Config>::RelayBlockNumber: PartialOrd<<T as frame_system::Config>::BlockNumber>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                                                                           \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"message":"the trait bound `ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>: EncodeLike<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":24371,"byte_end":24372,"line_start":733,"line_end":733,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"\t\tAgenda::<T>::append(when, s);","highlight_start":29,"highlight_end":30}],"label":"the trait `EncodeLike<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>` is not implemented for `ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":24345,"byte_end":24364,"line_start":733,"line_end":733,"column_start":3,"column_end":22,"is_primary":false,"text":[{"text":"\t\tAgenda::<T>::append(when, s);","highlight_start":3,"highlight_end":22}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"required because of the requirements on the impl of `EncodeLike<std::option::Option<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>>` for `std::option::Option<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::append`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/root/.cargo/git/checkouts/substrate-7e08433d4c370a21/fc3fd07/frame/support/src/storage/types/map.rs","byte_start":7258,"byte_end":7274,"line_start":205,"line_end":205,"column_start":19,"column_end":35,"is_primary":true,"text":[{"text":"\t\tEncodeLikeItem: EncodeLike<Item>,","highlight_start":19,"highlight_end":35}],"label":"required by this bound in `frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::append`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider introducing a `where` bound, but there might be an alternative better way to express this requirement","code":null,"level":"help","spans":[{"file_name":"src/lib.rs","byte_start":20000,"byte_end":20000,"line_start":577,"line_end":577,"column_start":26,"column_end":26,"is_primary":true,"text":[{"text":"impl<T: Config> Pallet<T> {","highlight_start":26,"highlight_end":26}],"label":null,"suggested_replacement":" where ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>: EncodeLike<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>: EncodeLike<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:733:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m733\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Agenda::<T>::append(when, s);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>` is not implemented for `ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `EncodeLike<std::option::Option<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>>` for `std::option::Option<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::append`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/git/checkouts/substrate-7e08433d4c370a21/fc3fd07/frame/support/src/storage/types/map.rs:205:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        EncodeLikeItem: EncodeLike<Item>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::append`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider introducing a `where` bound, but there might be an alternative better way to express this requirement\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m577\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0mimpl<T: Config> Pallet<T>\u001b[0m\u001b[0m\u001b[38;5;10m where ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>: EncodeLike<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\u001b[0m\n\n"}
{"message":"the trait bound `ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, _>: EncodeLike<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":27095,"byte_end":27102,"line_start":827,"line_end":827,"column_start":29,"column_end":36,"is_primary":true,"text":[{"text":"\t\tAgenda::<T>::append(when, Some(s));","highlight_start":29,"highlight_end":36}],"label":"the trait `EncodeLike<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>` is not implemented for `ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/lib.rs","byte_start":27069,"byte_end":27088,"line_start":827,"line_end":827,"column_start":3,"column_end":22,"is_primary":false,"text":[{"text":"\t\tAgenda::<T>::append(when, Some(s));","highlight_start":3,"highlight_end":22}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following implementations were found:\n  <ScheduledV3<Call, BlockNumber, PalletsOrigin, AccountId> as EncodeLike>","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required because of the requirements on the impl of `EncodeLike<std::option::Option<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>>` for `std::option::Option<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, _>>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::append`","code":null,"level":"note","spans":[{"file_name":"src/lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":"required by a bound in this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/root/.cargo/git/checkouts/substrate-7e08433d4c370a21/fc3fd07/frame/support/src/storage/types/map.rs","byte_start":7258,"byte_end":7274,"line_start":205,"line_end":205,"column_start":19,"column_end":35,"is_primary":true,"text":[{"text":"\t\tEncodeLikeItem: EncodeLike<Item>,","highlight_start":19,"highlight_end":35}],"label":"required by this bound in `frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::append`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, _>: EncodeLike<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:827:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m827\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        Agenda::<T>::append(when, Some(s));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------------\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `EncodeLike<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>` is not implemented for `ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, _>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following implementations were found:\u001b[0m\n\u001b[0m              <ScheduledV3<Call, BlockNumber, PalletsOrigin, AccountId> as EncodeLike>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required because of the requirements on the impl of `EncodeLike<std::option::Option<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as frame_system::Config>::BlockNumber, <T as pallet::Config>::PalletsOrigin, <T as frame_system::Config>::AccountId>>>` for `std::option::Option<ScheduledV3<MaybeHashed<<T as pallet::Config>::Call, <T as frame_system::Config>::Hash>, <T as pallet::Config>::RelayBlockNumber, <T as pallet::Config>::PalletsOrigin, _>>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::append`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/root/.cargo/git/checkouts/substrate-7e08433d4c370a21/fc3fd07/frame/support/src/storage/types/map.rs:205:19\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m205\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        EncodeLikeItem: EncodeLike<Item>,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `frame_support::pallet_prelude::StorageMap::<Prefix, Hasher, Key, Value, QueryKind, OnEmpty, MaxValues>::append`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":12680,"byte_end":12685,"line_start":354,"line_end":354,"column_start":39,"column_end":44,"is_primary":true,"text":[{"text":"\t\t\t\t\t\t\tlet until = now.saturating_add(delay);","highlight_start":39,"highlight_end":44}],"label":"expected pallet::Config::RelayBlockNumber, found frame_system::Config::BlockNumber","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected associated type `<T as pallet::Config>::RelayBlockNumber`\n   found associated type `<T as frame_system::Config>::BlockNumber`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:354:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m354\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| ...\u001b[0m\u001b[0m                   let until = now.saturating_add(delay);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected pallet::Config::RelayBlockNumber, found frame_system::Config::BlockNumber\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected associated type `\u001b[0m\u001b[0m\u001b[1m<T as pallet::Config>::RelayBlockNumber\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found associated type `\u001b[0m\u001b[0m\u001b[1m<T as frame_system::Config>::BlockNumber\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/lib.rs","byte_start":15308,"byte_end":15314,"line_start":420,"line_end":420,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"\t\t\t\t\tlet wake = now + period;","highlight_start":23,"highlight_end":29}],"label":"expected pallet::Config::RelayBlockNumber, found frame_system::Config::BlockNumber","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected associated type `<T as pallet::Config>::RelayBlockNumber`\n   found associated type `<T as frame_system::Config>::BlockNumber`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/lib.rs:420:23\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m420\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                    let wake = now + period;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected pallet::Config::RelayBlockNumber, found frame_system::Config::BlockNumber\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected associated type `\u001b[0m\u001b[0m\u001b[1m<T as pallet::Config>::RelayBlockNumber\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m               found associated type `\u001b[0m\u001b[0m\u001b[1m<T as frame_system::Config>::BlockNumber\u001b[0m\u001b[0m`\u001b[0m\n\n"}
{"message":"aborting due to 10 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 10 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0053, E0277, E0308.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0053, E0277, E0308.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0053`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0053`.\u001b[0m\n"}
